services:
  mlflow:
    image: python:3.9-slim
    container_name: mlflow-server
    entrypoint: >
      bash -c "
        pip install mlflow>=2.0.0 psycopg2-binary &&
        mlflow server --host 0.0.0.0 --backend-store-uri /mlruns"
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:5000
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:5000')"]
      interval: 10s
      timeout: 5s
      retries: 5

  training:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: car-recommendation-training
    volumes:
      - ./:/app
      - ./mlruns:/mlruns
    depends_on:
      mlflow:
        condition: service_healthy
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    command: >
      bash -c "
        python main.py --optimize --register_model &&
        touch /app/training_complete"

  model-registration:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: car-recommendation-registration
    volumes:
      - ./:/app
      - ./mlruns:/mlruns
    depends_on:
      training:
        condition: service_completed_successfully
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    command: >
      bash -c "
        while [ ! -f /app/training_complete ]; do sleep 2; done &&
        python register_model.py &&
        touch /app/registration_complete"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: car-recommendation-api
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./mlruns:/mlruns
    depends_on:
      model-registration:
        condition: service_completed_successfully
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MODEL_NAME=best_overall_model
      - MODEL_STAGE=Production
    command: >
      bash -c "
        while [ ! -f /app/registration_complete ]; do sleep 2; done &&
        uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload"